set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin
" for pathogen
call pathogen#infect()
"au syntax * cal rainbow_parentheses#activate()
Helptags
syntax on
filetype plugin indent on
filetype on
filetype plugin on


"let g:rainbow_active = 1


set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

"set spell           "set the spell checking
set gcr=a:blinkon0  "donot let the cursor blink
set linebreak       "let one word not be broken at the end of a line
set autoread
set guioptions-=T   "remove the tool bar in GVIM
set nu              "set line number
set ruler           "show position of cursor
set incsearch
set autoindent
set tabstop=4
set shiftwidth=4
color moria
set guifont=Consolas:h11:cANSI
set nobackup        "donot backup file
au GUIEnter * simalt ~x
set noswapfile      
set laststatus=2
set history=1024
set confirm
set autochdir
"set tags=./tags,./..tags,./**/tags,D:\linux-2.6.35.7\tags
set shortmess=atI
set cinoptions=g0
set ic
"set noic
set foldmethod=syntax
set foldnestmax=10
set nofoldenable
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
set termencoding=utf-8
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show unicode glyphs
set expandtab
%retab

"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%81v.\+/
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif


"highlight StatusLine guifg=SlateBlue guibg=White
"highlight StatusLineNC guifg=Gray guibg=White
"set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]

let g:tagbar_ctags_bin = 'C:\alex\programs\myGnuTools\GnuWin32\bin\ctags.exe'
let Tlist_Ctags_Cmd = 'C:\alex\programs\myGnuTools\GnuWin32\bin\ctags.exe'
let Tlist_Use_Right_Window = 1
let Tlist_File_Fold_Auto_Close = 0
let Tlist_Exist_OnlyWindow = 1 
let Tlist_Exit_OnlyWindow = 1
let Tlist_Show_One_File = 1
let Tlist_Process_File_Always = 1

let tlist_cpp_settings = 'c++;c:class;d:constraints;m:member;f:function'
let tlist_c_settings = 'c;d:macro;s:structure;u:union;f:function'


let g:LargeFile=3

map <F9> :TagbarToggle<CR>
map <F10> :TlistToggle<CR>
map <F11> :MRU<CR>
map <F12> :!ctags -R --sort=yes --c++-kinds=+plx --fields=+iaS --extra=+q -I__wur -I__THROW .<CR>
nmap <C-M><C-P>  <leader>#
nmap <C-M><C-N>  <leader>*

"fuzzyFinder
map ff <ESC>:FufFile<CR>
map fcd <ESC>:FufDir<CR>

let g:yankring_history_dir = 'C:\alex'
let g:yankring_history_file = 'my_yankring_history_file'

function! s:insert_gates()
  let gatename = substitute(toupper(expand("%:t")), "\\.", "_", "g")
  execute "normal! i#ifndef " . "_" . gatename . "_"
  execute "normal! o#define " . "_" . gatename . "_"
  execute "normal! Go#endif /* " . gatename . " */"
  normal! kk
endfunction
autocmd BufNewFile *.{h,hpp} call <SID>insert_gates()
"autocmd BufEnter * call DoWordComplete()

if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif


set tags=C:\Alex\myfile\code\accurev\ssOnLaptop\tags
:cscope add  C:\Alex\myfile\code\accurev\ssOnLaptop\cscope.out
